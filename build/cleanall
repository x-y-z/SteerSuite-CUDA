#!/bin/bash

#
# Copyright (c) Shawn Singh, Mubbasir Kapadia, Petros Faloutsos, Glenn Reinman
# See license.txt for complete license.
#


if [ "`which gmake 2> /dev/null`" == "" ]; then
    MAKE=make
else
    MAKE=gmake
fi


# remove Visual Studio 2008 files that may exist, only used if the
# user specified "cleanall win32"
if [ "$1" == "win32" ]; then
    echo "Cleaning Visual Studio 2008 files"
    rm -rf win32/Release
    rm -rf win32/Debug
    rm -f win32/steersuite.suo
    rm -f win32/steersuite.ncb

    rm -rf ../steertool/build/win32/Release
    rm -rf ../steertool/build/win32/Debug
    rm -rf ../steertool/build/win32/steertool.vcproj.*.user

    rm -rf ../external/glfw/win32/Release
    rm -rf ../external/glfw/win32/Debug
    rm -f ../external/glfw/win32/glfw.vcproj.*.user

    rm -rf ../steerbench/build/win32/Release
    rm -rf ../steerbench/build/win32/Debug
    rm -f ../steerbench/build/win32/steerbench.vcproj.*.user

    rm -rf ../pprAI/build/win32/Release
    rm -rf ../pprAI/build/win32/Debug
    rm -f ../pprAI/build/win32/pprAI.vcproj.*.user

    rm -rf ../simpleAI/build/win32/Release
    rm -rf ../simpleAI/build/win32/Debug
    rm -f ../simpleAI/build/win32/simpleAI.vcproj.*.user

    rm -rf ../steerlib/build/win32/Release
    rm -rf ../steerlib/build/win32/Debug
    rm -f ../steerlib/build/win32/steerlib.vcproj.*.user

    rm -rf ../steersim/build/win32/Release
    rm -rf ../steersim/build/win32/Debug
    rm -f ../steersim/build/win32/steersim.vcproj.*.user

    rm -rf ../egocentricAI/build/win32/Release
    rm -rf ../egocentricAI/build/win32/Debug
    rm -f ../egocentricAI/build/win32/egocentricAI.vcproj.*.user

    exit 0
fi

# This brute-force careful approach makes sure we don't delete
# potentially precious files that the user forgot inside directory.
echo "Cleaning bin/"
if [ -d bin/ ]; then
    rm -f bin/steerbench
    rm -f bin/steersim
    rm -f bin/steertool
    rmdir bin/
fi

# This brute-force careful approach makes sure we don't delete
# potentially precious files that the user forgot inside directory.
echo "Cleaning lib/"
if [ -d lib/ ]; then
    rm -f lib/libsteer.so
    rm -f lib/libglfw.so
    rm -f lib/libglfw.dylib
    rmdir lib/
fi


# This brute-force careful approach makes sure we don't delete
# potentially precious files that the user forgot inside directory.
echo "Cleaning modules/"
if [ -d modules/ ]; then
    rm -f modules/simpleAI.o
    rm -f modules/pprAI.o
    rmdir modules/
fi

echo "Cleaning GLFW"
pushd ../external/glfw > /dev/null
$MAKE x11-clean > /dev/null
$MAKE macosx-clean > /dev/null
popd > /dev/null


echo "Cleaning SteerLib"
pushd ../steerlib/build > /dev/null
$MAKE clean > /dev/null
popd > /dev/null


echo "Cleaning SteerBench"
pushd ../steerbench/build > /dev/null
$MAKE clean > /dev/null
popd > /dev/null


echo "Cleaning SteerSim"
pushd ../steersim/build > /dev/null
rm -f autogenerated/moc_*.cpp
$MAKE clean > /dev/null
popd > /dev/null


echo "Cleaning SteerTool"
pushd ../steertool/build > /dev/null
$MAKE clean > /dev/null
popd > /dev/null


echo "Cleaning SimpleAI"
pushd ../simpleAI/build > /dev/null
$MAKE clean > /dev/null
popd > /dev/null


echo "Cleaning PPR AI"
pushd ../pprAI/build > /dev/null
$MAKE clean > /dev/null
popd > /dev/null


echo "Cleaning Egocentric AI"
pushd ../egocentricAI/build > /dev/null
$MAKE clean > /dev/null
popd > /dev/null



